services:
  # MySQL сервис
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: messenger
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_container
    restart: always
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - '4444:80'
    networks:
      - app-network
    depends_on:
      - db

  # PHP сервис
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: php_backend
    volumes:
      - ./backend:/var/www/html
    networks:
      - app-network
    depends_on:
      - db
    ports:
      - '8080:8080' # Добавлен порт для WebSocket сервера

  # Nginx сервис
  webserver:
    image: nginx:alpine
    container_name: nginx_server
    restart: always
    ports:
      - '80:80'
    volumes:
      - ./backend:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - backend

  # ReactJS сервис
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - app-network
    stdin_open: true
    tty: true

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
